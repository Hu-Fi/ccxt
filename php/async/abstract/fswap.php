<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class fswap extends \ccxt\async\Exchange {
    public function fswappublic_get_info($params = array()) {
        return $this->request('info', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_assets($params = array()) {
        return $this->request('assets', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_pairs($params = array()) {
        return $this->request('pairs', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_cmc_pairs($params = array()) {
        return $this->request('cmc/pairs', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_stats_markets($params = array()) {
        return $this->request('stats/markets', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_stats_markets_base_quote($params = array()) {
        return $this->request('stats/markets/{base}/{quote}', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_stats_markets_base_quote_kline_v2($params = array()) {
        return $this->request('stats/markets/{base}/{quote}/kline/v2', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswappublic_get_transactions_base_quote($params = array()) {
        return $this->request('transactions/{base}/{quote}', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function mixinpublic_get_network_asset_asset_id($params = array()) {
        return $this->request('network/asset/{asset_id}', 'mixinPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapprivate_get_orders_follow_id($params = array()) {
        return $this->request('orders/{follow_id}', 'fswapPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapprivate_get_transactions_base_quote_mine($params = array()) {
        return $this->request('transactions/{base}/{quote}/mine', 'fswapPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapprivate_post_actions($params = array()) {
        return $this->request('actions', 'fswapPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function mixinprivate_get_safe_snapshots($params = array()) {
        return $this->request('safe/snapshots', 'mixinPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function mixinprivate_get_safe_deposit_entries($params = array()) {
        return $this->request('safe/deposit/entries', 'mixinPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function mixinprivate_post_safe_keys($params = array()) {
        return $this->request('safe/keys', 'mixinPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function mixinprivate_post_safe_transaction_requests($params = array()) {
        return $this->request('safe/transaction/requests', 'mixinPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function mixinprivate_post_safe_transactions($params = array()) {
        return $this->request('safe/transactions', 'mixinPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function ccxtproxy_post_4swap_preorder($params = array()) {
        return $this->request('4swap/preorder', 'ccxtProxy', 'POST', $params, null, null, array("cost" => 1));
    }
    public function ccxtproxy_post_mixin_encodetx($params = array()) {
        return $this->request('mixin/encodetx', 'ccxtProxy', 'POST', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetInfo($params = array()) {
        return $this->request('info', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetAssets($params = array()) {
        return $this->request('assets', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetPairs($params = array()) {
        return $this->request('pairs', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetCmcPairs($params = array()) {
        return $this->request('cmc/pairs', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetStatsMarkets($params = array()) {
        return $this->request('stats/markets', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetStatsMarketsBaseQuote($params = array()) {
        return $this->request('stats/markets/{base}/{quote}', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetStatsMarketsBaseQuoteKlineV2($params = array()) {
        return $this->request('stats/markets/{base}/{quote}/kline/v2', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPublicGetTransactionsBaseQuote($params = array()) {
        return $this->request('transactions/{base}/{quote}', 'fswapPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function mixinPublicGetNetworkAssetAssetId($params = array()) {
        return $this->request('network/asset/{asset_id}', 'mixinPublic', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPrivateGetOrdersFollowId($params = array()) {
        return $this->request('orders/{follow_id}', 'fswapPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPrivateGetTransactionsBaseQuoteMine($params = array()) {
        return $this->request('transactions/{base}/{quote}/mine', 'fswapPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function fswapPrivatePostActions($params = array()) {
        return $this->request('actions', 'fswapPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function mixinPrivateGetSafeSnapshots($params = array()) {
        return $this->request('safe/snapshots', 'mixinPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function mixinPrivateGetSafeDepositEntries($params = array()) {
        return $this->request('safe/deposit/entries', 'mixinPrivate', 'GET', $params, null, null, array("cost" => 1));
    }
    public function mixinPrivatePostSafeKeys($params = array()) {
        return $this->request('safe/keys', 'mixinPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function mixinPrivatePostSafeTransactionRequests($params = array()) {
        return $this->request('safe/transaction/requests', 'mixinPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function mixinPrivatePostSafeTransactions($params = array()) {
        return $this->request('safe/transactions', 'mixinPrivate', 'POST', $params, null, null, array("cost" => 1));
    }
    public function ccxtProxyPost4swapPreorder($params = array()) {
        return $this->request('4swap/preorder', 'ccxtProxy', 'POST', $params, null, null, array("cost" => 1));
    }
    public function ccxtProxyPostMixinEncodetx($params = array()) {
        return $this->request('mixin/encodetx', 'ccxtProxy', 'POST', $params, null, null, array("cost" => 1));
    }
}
